# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu rofi -show drun | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }

# input type:touchpad {
#     natural_scroll enabled
#     dwt enabled
#     tap enabled
#     middle_emulation enabled
# }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# Section "InputClass"
#         Identifier "libinput touchpad catchall"
#         MatchIsTouchpad "on"
#         MatchDevicePath "/dev/input/event*"
#         Driver "libinput"
#         Option "NaturalScrolling" "True"
# EndSection
### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+t exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+r exec $menu

    # media control
    bindsym XF86AudioRaiseVolume exec volumectl -u up
    bindsym XF86AudioLowerVolume exec volumectl -u down
    bindsym XF86AudioMute exec volumectl toggle-mute

    # brightness
    bindsym XF86MonBrightnessUp exec lightctl up
    bindsym XF86MonBrightnessDown exec lightctl down

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    # floating_modifier $mod normal
    floating_modifier $mod

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
#     bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# #
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#

bindsym $mod+shift+r mode resize
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

#
# Status Bar:
#
# bar { 
#     i3_command waybar
# }

# swayfx

# borders and whatnot
font Noto Sans
default_border pixel
default_floating_border pixel
# set {
#     $col_urgent                    #cc241d
#     $col_focused                   #458588
#     $col_unfocused                 #282828
#     $col_focused_inactive          #665c54
#     $col_text_dark                 #bdae93
#     $col_text_light                #fbf1c7
#     $col_text_lightest             #fbf1c7
#     $col_urgent_border             #cc241d
#     $col_focused_border            #ebdbb2
#     $col_unfocused_border          #3c3836
#     $col_focused_inactive_border   #7c6f64
# }

# You can also use any non-zero value if you'd like to have a border
for_window [class=".*"] border pixel 2

# smart_borders on
smart_gaps on
# border_radius 30
# smart_gaps on
gaps outer 10
gaps inner 5

# class                  border                        background             text                indicator              child_border
client.focused           #ebdbb2           #458588           #fbf1c7      #458588           #ebdbb2
client.focused_inactive  #7c6f64  #665c54  #bdae93  #665c54  #7c6f64
client.unfocused         #3c3836         #282828         #bdae93     #282828         #3c3836
client.urgent            #cc241d            #cc241d            #fbf1c7  #cc241d            #cc241d

# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

workspace 1 output HDMI-1-0
workspace 2 output DP-1-0
workspace 3 output eDP-1

assign [class="kitty"] 1
assign [class="Firefox"] 2
assign [class="Slack"] 3

for_window [class="Pavucontrol"] floating enable
for_window [class="kitty"] smart_gaps on


exec --no-startup-id xrandr --output HDMI-1-0 --auto --rotate left --output DP-1-0 --mode 1920x1080 --rate 143 --pos 1200x300  --output eDP-1 --auto --right-of DP-1-0 &
# autostart
exec --no-startup-id picom --config ~/.config/picom/picom.conf -b
exec --no-startup-id dunst
exec --no-startup-id eww daemon
exec --no-startup-id /home/jfelmeden/.config/eww/toggle_bar
exec avizo-service
exec --no-startup-id feh --bg-scale /home/jfelmeden/Pictures/mountain.jpg
exec --no-startup-id i3-msg 'workspace 3; exec slack'
exec --no-startup-id i3-msg 'workspace 1; exec kitty'
exec --no-startup-id i3-msg 'workspace 2; exec firefox'
exec i3-msg 'setxkbmap -layout gb'

